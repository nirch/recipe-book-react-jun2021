{"version":3,"sources":["shared/ActiveUserContext.js","components/RecipeNavbar/RecipeNavbar.jsx","model/UserModel.js","pages/HomePage/HomePage.jsx","pages/LoginPage/LoginPage.jsx","components/NewRecipeModal/NewRecipeModal.jsx","components/RecipeCard/RecipeCard.jsx","pages/RecipesPage/RecipesPage.jsx","model/RecipeModel.js","App.js","reportWebVitals.js","index.js"],"names":["ActiveUserContext","createContext","RecipeNavbar","onLogout","activeUser","useContext","className","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","id","Nav","Link","as","to","onClick","UserModel","plainUser","this","fname","lname","email","pwd","HomePage","props","LoginPage","users","onLogin","useState","setEmail","setPwd","showInvalidLogin","setShowInvalidLogin","Alert","variant","onClose","dismissible","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","Text","Button","find","user","NewRecipeModal","show","onCreate","name","setName","desc","setDesc","img","setImg","Modal","onHide","size","Header","closeButton","Title","Body","Row","column","sm","Col","accept","files","Image","src","URL","createObjectURL","Footer","RecipeCard","recipe","Card","Img","RecipesPage","recipes","onNewRecipe","showRecipeModal","setShowRecipeModal","chartData","useMemo","console","log","easyRecipes","hardRecipes","difficulty","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","map","md","RecipeModel","plainRecipe","userId","App","jsonUsers","jsonRecipes","setRecipes","localStorage","JSON","parse","setActiveUser","activeUserRecipes","filter","Provider","exact","path","setItem","stringify","removeItem","imgURL","newRecipe","length","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79244de6.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst ActiveUserContext = createContext(null);\n\nexport default ActiveUserContext;","import React, { useContext } from 'react';\nimport { Container, Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ActiveUserContext from '../../shared/ActiveUserContext';\n\nfunction RecipeNavbar({onLogout}) {\n    const activeUser = useContext(ActiveUserContext);\n\n    return (\n        <div className=\"c-navbar\">\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Container>\n                    <Navbar.Brand href=\"#/\">Recipe Book</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            {activeUser ? <Nav.Link as={Link} to=\"/recipes\">Recipes</Nav.Link> : null}\n                        </Nav>\n                        <Nav className=\"ms-auto\">\n                            {!activeUser ? <Nav.Link href=\"#/login\">Login</Nav.Link> : null}\n                            {!activeUser ? <Nav.Link href=\"#/signup\">Signup</Nav.Link> : null}\n                            {activeUser ? <Nav.Link href=\"#\" onClick={() => onLogout()}>Logout</Nav.Link> : null}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>       \n        </div>\n    );\n}\n\nexport default RecipeNavbar;","\nclass UserModel {\n    constructor(plainUser) {\n        this.id = plainUser.id;\n        this.fname = plainUser.fname;\n        this.lname = plainUser.lname;\n        this.email = plainUser.email;\n        this.pwd = plainUser.pwd;\n    }\n}\n\nexport default UserModel;","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nfunction HomePage(props) {\n    return (\n        <div className=\"p-home\">\n            <Container>\n                <h1 className=\"display-1\">Recipe Book</h1>\n                <p>Master your recipes</p>\n            </Container>\n        </div>\n    );\n}\n\nexport default HomePage;","import React from 'react';\nimport { useContext } from 'react';\nimport { useState } from 'react';\nimport { Button, Form, Alert } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport ActiveUserContext from '../../shared/ActiveUserContext';\nimport './LoginPage.css'\n\nfunction LoginPage({users, onLogin}) {\n    const [email, setEmail] = useState(\"nir@nir.com\");\n    const [pwd, setPwd] = useState(\"123\");\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\n    const activeUser = useContext(ActiveUserContext);\n\n    if (activeUser) {\n        return <Redirect to=\"/recipes\"/>\n    }\n\n    function login() {\n        \n        // let activeUser = null;\n        // for (const user of users) {\n        //     if (user.email === email && user.pwd === pwd) {\n        //         activeUser = user;\n        //         break;\n        //     }\n        // }\n\n        const activeUser = users.find(user => user.email === email && user.pwd === pwd);\n\n        if (activeUser) {\n            // Invoke parent (App) function to update the activeUser state in the app\n            onLogin(activeUser);\n        } else {\n            // Showing an alert\n            setShowInvalidLogin(true);\n        }\n    }\n\n    return (\n        <div className=\"p-login\">\n            <h1>Login to Recipe Book</h1>\n            <p>or <Link to=\"/signup\">create an account</Link></p>\n            {showInvalidLogin ?\n                <Alert variant=\"danger\" onClose={() => setShowInvalidLogin(false)} dismissible>Invalid Credentials!</Alert> : null}\n            <Form>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" \n                        value={email} onChange={e => setEmail(e.target.value)} />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" \n                        value={pwd} onChange={e => setPwd(e.target.value)} />\n                </Form.Group>\n                <div className=\"d-grid gap-2\">\n                    <Button variant=\"success\" type=\"button\" onClick={login}>\n                        Login\n                    </Button>\n                </div>\n            </Form>\n        </div>\n    );\n}\n\nexport default LoginPage;","import React, { useState } from 'react';\nimport { Button, Modal, Form, Row, Col, Image } from 'react-bootstrap';\n\nfunction NewRecipeModal({ show, onClose, onCreate }) {\n    const [name, setName] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const [img, setImg] = useState(null);\n\n    function clearForm() {\n        setName(\"\");\n        setDesc(\"\");\n        setImg(null);\n    }\n\n    function createRecipe() {\n        onCreate(name, desc, img ? URL.createObjectURL(img) : \"\");\n        clearForm();\n        onClose();\n    }\n\n    function handleFileChange(e) {\n        setImg(e.target.files[0]);\n    }\n\n    return (\n        <Modal show={show} onHide={onClose} size=\"lg\">\n            <Modal.Header closeButton>\n                <Modal.Title>New Recipe</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalName\">\n                        <Form.Label column sm={3}>\n                            Recipe Name\n                        </Form.Label>\n                        <Col sm={9}>\n                            <Form.Control type=\"text\" value={name} onChange={e => setName(e.target.value)} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalDesc\">\n                        <Form.Label column sm={3}>\n                            Recipe Description\n                        </Form.Label>\n                        <Col sm={9}>\n                            <Form.Control type=\"text\" value={desc} onChange={e => setDesc(e.target.value)}  />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalImage\">\n                        <Form.Label column sm={3}>\n                            Recipe Image\n                        </Form.Label>\n                        <Col sm={9}>\n                            <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange}  />\n                        </Col>\n                    </Form.Group>\n                </Form>\n                <Image src={img ? URL.createObjectURL(img) : \"\"}/>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onClose}>\n                    Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={createRecipe}>\n                    Create Recipe\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default NewRecipeModal;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport './RecipeCard.css'\n\nfunction RecipeCard({ recipe }) {\n    return (\n        <div className=\"c-recipe\">\n            <Card>\n                <Card.Img variant=\"top\" src={recipe.img} />\n                <Card.Body>\n                    <Card.Title>{recipe.name}</Card.Title>\n                    <Card.Text>{recipe.desc}</Card.Text>\n                </Card.Body>\n            </Card>        \n        </div>\n    );\n}\n\nexport default RecipeCard;","import React, { useContext } from 'react';\nimport { useState } from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport NewRecipeModal from '../../components/NewRecipeModal/NewRecipeModal';\nimport RecipeCard from '../../components/RecipeCard/RecipeCard';\nimport ActiveUserContext from '../../shared/ActiveUserContext';\nimport \"./RecipesPage.css\"\nimport { Pie } from 'react-chartjs-2';\nimport { useMemo } from 'react';\n\nfunction RecipesPage({ recipes, onNewRecipe }) {\n    const [showRecipeModal, setShowRecipeModal] = useState(false)\n    const activeUser = useContext(ActiveUserContext);\n\n    const chartData = useMemo(() => {\n        console.log(\"calculating chartData\");\n        let easyRecipes = 0;\n        let hardRecipes = 0;\n        for (const recipe of recipes) {\n            if (recipe.difficulty === 1) {\n                ++easyRecipes;\n            } else {\n                ++hardRecipes;\n            }\n        }\n\n        return {\n            labels: ['Easy', 'Hard'],\n            datasets: [\n                {\n                    label: '# of Recipes',\n                    data: [easyRecipes, hardRecipes],\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                    ],\n                    borderWidth: 1,\n                },\n            ],\n        }\n    }, [recipes])\n\n\n    if (!activeUser) {\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <div className=\"p-recipes\">\n            <Container>\n                <div className=\"heading\">\n                    <h1>{activeUser.fname}'s Recipes</h1>\n                    <Button onClick={() => setShowRecipeModal(true)}>New Recipe</Button>\n                </div>\n                <Row>\n                    {recipes.map(recipe =>\n                        <Col key={recipe.id} md={3} sm={6}>\n                            <RecipeCard recipe={recipe} />\n                        </Col>\n                    )}\n                </Row>\n                <Pie data={chartData} />\n            </Container>\n            <NewRecipeModal show={showRecipeModal} onClose={() => setShowRecipeModal(false)} onCreate={onNewRecipe} />\n        </div>\n    );\n}\n\nexport default RecipesPage;","\nclass RecipeModel {\n    constructor(plainRecipe) {\n        this.id = plainRecipe.id;\n        this.name = plainRecipe.name;\n        this.desc = plainRecipe.desc;\n        this.img = plainRecipe.img;\n        this.difficulty = plainRecipe.difficulty;\n        this.userId = plainRecipe.userId;\n    }\n}\n\nexport default RecipeModel;","import { useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport RecipeNavbar from './components/RecipeNavbar/RecipeNavbar';\nimport UserModel from './model/UserModel';\nimport HomePage from './pages/HomePage/HomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport RecipesPage from './pages/RecipesPage/RecipesPage';\nimport jsonUsers from './data/users.json';\nimport jsonRecipes from './data/recipes.json';\nimport RecipeModel from './model/RecipeModel';\nimport ActiveUserContext from './shared/ActiveUserContext';\n\nfunction App() {\n  const [users, setUsers] = useState(jsonUsers.map(plainUser => new UserModel(plainUser)));\n  const [recipes, setRecipes] = useState(jsonRecipes.map(plainRecipe => new RecipeModel(plainRecipe)));\n  const [activeUser, setActiveUser] = useState(localStorage.activeUser ? JSON.parse(localStorage.activeUser) : null);\n\n  const activeUserRecipes = activeUser ? recipes.filter(recipe => recipe.userId === activeUser.id) : [];\n\n  function createRecipe(name, desc, imgURL) {\n    const newRecipe = new RecipeModel({\n      id: recipes[recipes.length -1].id + 1,\n      name,\n      desc,\n      img: imgURL,\n      difficulty: 1,\n      userId: activeUser.id\n    });\n\n    setRecipes(recipes.concat(newRecipe));\n  }\n\n\n  function login(activeUser) {\n    setActiveUser(activeUser);\n    localStorage.setItem(\"activeUser\", JSON.stringify(activeUser));\n  }\n\n  function logout() {\n    setActiveUser(null);\n    localStorage.removeItem(\"activeUser\");\n  }\n\n  return (\n    <div>\n      <ActiveUserContext.Provider value={activeUser}>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <RecipeNavbar onLogout={() => setActiveUser()}/>\n              <HomePage/>\n            </Route>\n            <Route exact path=\"/login\">\n              <LoginPage users={users} onLogin={login}/>\n            </Route>\n            <Route exact path=\"/recipes\">\n              <RecipeNavbar onLogout={logout}/>\n              <RecipesPage recipes={activeUserRecipes} onNewRecipe={createRecipe}/>\n            </Route>\n          </Switch>\n        </HashRouter>\n      </ActiveUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}